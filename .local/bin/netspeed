#!/bin/bash

# Original: http://linuxclues.blogspot.com/2009/11/shell-script-show-network-speed.html
# This shell script shows the network speed, both received and transmitted.

# Global variables
# interface=$1
interface=$(ip route | awk '/^default/ { print $5 ; exit }')
received_bytes=""
old_received_bytes=""
transmitted_bytes=""
old_transmitted_bytes=""

# if interface is empty, print nothing
if [ -z "$interface" ]; then
  printf ""
  exit
fi

# This function parses /proc/net/dev file searching for a line containing $interface data.
# Within that line, the first and ninth numbers after ':' are respectively the received and transmited bytes.
function get_bytes {
  line=$(< /proc/net/dev grep "$interface" | cut -d ':' -f 2 | awk '{print "received_bytes="$1, "transmitted_bytes="$9}')
  eval "$line"
}

# Function which calculates the speed using actual and old byte number.
# Speed is shown in KByte per second when greater or equal than 1 KByte per second.
# This function should be called each second.
function get_velocity {
  value=$1
  old_value=$2

  (( vel=value-old_value ))
  (( velKB=vel/1000 ))
  (( velMB=vel/1000000 ))

  if [ $velMB != 0 ]; then
    echo -n "$velMB MB/s";
  elif [ $velKB != 0 ]; then
    echo -n "$velKB KB/s";
  else
    echo -n "$vel B/s";
  fi
}

# Gets initial values.
get_bytes
old_received_bytes=$received_bytes
old_transmitted_bytes=$transmitted_bytes

# Shows a message and waits for one second.
sleep 1;

# Get new transmitted and received byte number values.
get_bytes

# Calculates speeds.
vel_recv=$(get_velocity "$received_bytes" "$old_received_bytes")
vel_trans=$(get_velocity "$transmitted_bytes" "$old_transmitted_bytes")

# Shows results in the console.
case $1 in
  "down") echo -en "$vel_recv" ;;
  "up")   echo -en "$vel_trans" ;;
  *)      echo -en "$vel_recv $vel_trans" ;;
esac

# Update old values to perform new calculations.
old_received_bytes=$received_bytes
old_transmitted_bytes=$transmitted_bytes
